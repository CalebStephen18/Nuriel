{"version":3,"file":"lib_index_js.3a65dfb749e32ddd377b.js","mappings":"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","sources":["webpack://nuriel/./src/handler.ts","webpack://nuriel/./src/index.ts"],"sourcesContent":["// handler.ts\r\nimport { ServerConnection } from '@jupyterlab/services';\r\n\r\nexport async function requestAPI<T>(endpoint: string, options: RequestInit): Promise<T> {\r\n    const settings = ServerConnection.makeSettings();\r\n    const requestUrl = settings.baseUrl + endpoint; // Adjust if needed\r\n\r\n    let response: Response;\r\n    try {\r\n        response = await fetch(requestUrl, {\r\n            ...options,\r\n            headers: {\r\n                ...options.headers,\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        throw new Error(`Network error: ${error}`);\r\n    }\r\n}\r\n","import {\r\n  JupyterFrontEnd, JupyterFrontEndPlugin\r\n} from '@jupyterlab/application';\r\nimport { ICommandPalette, showDialog, Dialog } from '@jupyterlab/apputils';\r\nimport { INotebookTracker } from '@jupyterlab/notebook';\r\nimport { requestAPI } from './handler'; // Assuming you have a handler module for API requests\r\n\r\nconst extension: JupyterFrontEndPlugin<void> = {\r\n  id: 'code-summarization',\r\n  autoStart: true,\r\n  requires: [ICommandPalette, INotebookTracker],\r\n  activate\r\n};\r\n\r\nfunction activate(app: JupyterFrontEnd, palette: ICommandPalette, notebookTracker: INotebookTracker): void {\r\n  console.log('JupyterLab extension code-summarization is activated!');\r\n\r\n  const commandID = 'code:summarize';\r\n  app.commands.addCommand(commandID, {\r\n    label: 'Summarize Python Code',\r\n    execute: async () => {\r\n      const notebookPanel = notebookTracker.currentWidget;\r\n      if (notebookPanel && notebookPanel.content.activeCell && notebookPanel.content.activeCell.model.type === 'code') {\r\n        const cell = notebookPanel.content.activeCell;\r\n        // Ensuring 'value' is safely accessed\r\n        const code = cell.model.toJSON().source as string;\r\n\r\n        try {\r\n          const data = await requestAPI<any>('summarize', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ code }),\r\n          });\r\n\r\n          showDialog({\r\n            title: 'Code Summary',\r\n            body: data.summary || 'No summary available.',\r\n            buttons: [Dialog.okButton({ label: 'OK' })]\r\n          });\r\n        } catch (error: unknown) {\r\n          let message = 'Unknown error occurred.';\r\n          if (error instanceof Error) {\r\n            message = error.message;\r\n          }\r\n          console.error(`Error on summarizing code: ${message}`);\r\n          showDialog({\r\n            title: 'Error',\r\n            body: `Failed to summarize the code. Error: ${message}`,\r\n            buttons: [Dialog.okButton()]\r\n          });\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  palette.addItem({ command: commandID, category: 'Extensions' });\r\n}\r\n\r\nexport default extension;\r\n"],"names":[],"sourceRoot":""}